

var number = '13898794564' //手机号 这里必须写成字符串格式

// {1,4}, 默认贪婪, 尽可能匹配多
// var test = /^(\d{3})(\d{1,4})(\d{1,4})$/ //这里是3个表达式，第一个表达式(\d{3})匹配的是3个数字，第二三都是1-4个数字 

var test = /^(\d{3})(\d{4})(\d{4})$/ //这里是3个表达式，第一个表达式(\d{3})匹配的是3个数字，第二三都是1-4个数字 

let val = number.replace( test , '$1 $2 $3' );//这个$1表示的是第一个表达式匹配到的字符，中间直接用空格分割
console.log("val:", val);



// 第三个括号非捕获  val2: 138 9879 $3
// var test2 = /^(\d{3})(\d{1,4})(?:\d{1,4})$/ 

var test2 = /^(\d{3})(\d{1,4})(\d{1,4})$/ 

let val2 = number.replace( test2 , '$1 $2 $3' );//这个$1表示的是第一个表达式匹配到的字符，中间直接用空格分割
console.log("val2:", val2);


// 正向肯定预查, 非捕获组
// Windows(?=95|98|NT|2000)"能匹配"Windows2000"中的"Windows"，但不能匹配"Windows3.1"中的"Windows"。

// 正向否定预查, ...
// 例如"Windows(?!95|98|NT|2000)"能匹配"Windows3.1"中的"Windows"，但不能匹配"Windows2000"中的"Windows"

// 正反方向,  肯定否定   预查
// 笛卡尔积, 四种可能性

// ?<   ?<!