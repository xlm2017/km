



// 包含以下特殊字符和字母数字的8-20位组合

// !@#$%^&*()

let reg = /^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*()])[a-zA-Z0-9!@#$%^&*()]{8,20}$/

let str = "1aqwweq^";
str = "aqwweq1^";
str = "aqwweq^1";
str = "^aqwweq1";
str = "^1aqwweq";
str = "aqwweqq*1";

console.log(reg.test(str));


// 正则表达式中的 (?=...) 是正向肯定预查（positive lookahead）的语法，用于在匹配时对后面的内容进行预先判断。具体到 (?=.[a-zA-Z]) 这个部分：

// (?!...) 表达式中的 ?! 是一个否定预查（negative lookahead），而 ?= 是一个肯定预查（positive lookahead）。
// ., 在这里表示匹配任意字符。
// [a-zA-Z] 表示匹配任何一个字母。
// 所以 (?=.[a-zA-Z]) 的含义是，向前检查字符串中至少存在一个字母（大写或小写）。

// 在密码验证的正则表达式中，使用 (?=.[a-zA-Z]) 可以确保密码中至少包含一个字母。这样我们可以校验一个字符串是否同时包含数字、字母以及指定的特殊符号。