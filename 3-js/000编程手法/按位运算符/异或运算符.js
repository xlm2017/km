// 这个运算符主要是在位运算的时候使用，但是在普通的数也能使用，
// 且有一个转换过程，即将二进制的数转换为十进制


var a = 1 ^ 2;
//3
//1 -> 01
//2 -> 10
//1 ^ 2 -> 11 -> 3

// （1）真^假=真；

// （2）假^真=真；

// （3）假^假=假；

// （4）真^真=假。

// 通俗的解释为：假如两者相同，则为“假”，否则就为“真”。


// ^对操作数的二进制数中对应的每一位都做异或操作，当对应位的值不同时，结果为1，否则为0

// 1 的二进制表示为: 00000000 00000000 00000000 00000001
// 3 的二进制表示为: 00000000 00000000 00000000 00000011 /
// console.log(1 ^ 3) // 2


let nums1 = [4, 1, 2, 1, 2]

var singleNumber = function (nums) {
  let cmp = 0;
  for (let i = 0; i < nums.length; i++) {
    cmp = cmp ^ nums[i];
  }
  return cmp;
};