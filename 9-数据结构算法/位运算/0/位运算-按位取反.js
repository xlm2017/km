
// 非门 反相器

// ~

// 1->0, 0->1


// 现在我们以 ~3 来看一下计算步骤：

// 1、将3(这里叫原码)转为二进制 ： 00000011
// 2、按位取反为 ： 11111100
// 3、发现符号位(即最高位)为1(表示负数)，负数的二进制保存方式为其补码形式
// 4、除符号位之外，按位取反 ： 10000011
// 5、木偶末位加1得到补码 ： 10000100
// 6、转换为十进制为 ： -4
// ————————————————
// 版权声明：本文为CSDN博主「王廷云的博客」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
// 原文链接：https://blog.csdn.net/aiwangtingyun/article/details/104863683/


// 总结到按位取反运算的规律为：先将运算数加1，然后符号取反。比如：-6 按位取反就是 -6 加 1 变成 -5，
// 再执行符号位取反得到 5；3 按位取反就是 3 加上 1 变成 4，再执行符号位取反得到 -4


console.log(~3);
// -4
// -(3+1)